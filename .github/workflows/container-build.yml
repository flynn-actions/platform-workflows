name: Container Build and Push
on:
  workflow_call:
    inputs:
      dockerfile_path:
        description: 'Path to Dockerfile'
        required: false
        type: string
        default: './Dockerfile'
      image_name:
        description: 'Docker image name'
        required: true
        type: string
      image_tag:
        description: 'Docker image tag'
        required: false
        type: string
        default: 'latest'
      registry:
        description: 'Container registry URL'
        required: false
        type: string
        default: 'ghcr.io'
      build_args:
        description: 'Build arguments for Docker'
        required: false
        type: string
        default: ''
    secrets:
      REGISTRY_USERNAME:
        description: 'Registry username'
        required: true
      REGISTRY_PASSWORD:
        description: 'Registry password'
        required: true

jobs:
  security-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Scan Dockerfile
        uses: flynn-actions/platform-actions/dockerfile-scan@v1
        with:
          dockerfile-path: ${{ inputs.dockerfile_path }}

  build-and-push:
    name: Build and Push Container
    runs-on: ubuntu-latest
    needs: security-scan
    permissions:
      contents: read
      packages: write
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      image-url: ${{ steps.build.outputs.image-url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=${{ inputs.image_tag }}
      
      - name: Build and Push Container Image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile_path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.build_args }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  vulnerability-scan:
    name: Container Vulnerability Scan
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Run Trivy Scanner
        uses: flynn-actions/platform-actions/trivy-scan@v1
        with:
          image-url: ${{ needs.build-and-push.outputs.image-url }}
          severity: 'CRITICAL,HIGH'
          fail-on-findings: true

  sign-image:
    name: Sign Container Image
    runs-on: ubuntu-latest
    needs: [build-and-push, vulnerability-scan]
    steps:
      - name: Sign Container Image
        uses: flynn-actions/platform-actions/cosign-sign@v1
        with:
          image-digest: ${{ needs.build-and-push.outputs.image-digest }}
          private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
          password: ${{ secrets.COSIGN_PASSWORD }}