name: Standard CI/CD Pipeline
on:
  workflow_call:
    inputs:
      environment:
        description: 'Target environment (dev, staging, prod)'
        required: true
        type: string
      node_version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '18'
      run_tests:
        description: 'Whether to run tests'
        required: false
        type: boolean
        default: true
      deploy:
        description: 'Whether to deploy'
        required: false
        type: boolean
        default: false
      enable_sonar:
        description: 'Enable SonarQube analysis'
        required: false
        type: boolean
        default: false
    secrets:
      DEPLOY_TOKEN:
        description: 'Deployment token'
        required: false
      SONAR_TOKEN:
        description: 'SonarQube token for code analysis'
        required: false
      TEAMS_WEBHOOK_URL:
        description: 'Teams webhook URL for notifications'
        required: false

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run Security Scan
        uses: flynn-actions/platform-actions/security-scan@v1
        with:
          severity: 'high'
          fail-on-findings: true

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Build Application
        run: npm run build
      
      - name: Run Tests
        if: ${{ inputs.run_tests }}
        run: npm test
        
      - name: Code Quality Analysis
        if: ${{ inputs.enable_sonar }}
        uses: flynn-actions/platform-actions/sonar-analysis@v1
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ inputs.environment }}
          path: dist/
          retention-days: 30

  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ inputs.deploy }}
    environment: ${{ inputs.environment }}
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ inputs.environment }}
          path: dist/
      
      - name: Deploy Application
        uses: flynn-actions/platform-actions/deploy@v1
        with:
          environment: ${{ inputs.environment }}
          deploy-token: ${{ secrets.DEPLOY_TOKEN }}
          artifacts-path: dist/
      
      - name: Health Check
        uses: flynn-actions/platform-actions/health-check@v1
        with:
          environment: ${{ inputs.environment }}
          timeout: 300

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [security-scan, build-and-test, deploy]
    if: always()
    steps:
      - name: Notify Team
        uses: flynn-actions/platform-actions/notify@v1
        with:
          status: ${{ job.status }}
          environment: ${{ inputs.environment }}
          webhook-url: ${{ secrets.TEAMS_WEBHOOK_URL }}
